@model List<Material_Control.Models.InventoryItemModel>

@{
    ViewData["Title"] = "Inventory Dashboard";
    var currentMode = ViewBag.Mode ?? "Finished Goods";
}

<div class="main-content-card">
    <form id="antiForgeryForm" class="d-none">
        @Html.AntiForgeryToken()
    </form>

    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-0">Inventory Data</h2>
            <p class="text-muted mb-0">Manage and view your inventory items.</p>
        </div>

        <div class="d-flex align-items-end gap-3">
            <div style="width: 250px;">
                <label for="filterDate" class="form-label">Filter by Date</label>
                <input type="date" id="filterDate" class="form-control" />
            </div>
            <div style="width: 250px;">
                <label class="form-label">Select Category</label>
                <select class="form-select" onchange="location = this.value;">
                    <option value="@Url.Action("Index", new { mode = "Finished Goods" })" selected="@(currentMode == "Finished Goods")">Finished Goods</option>
                    <option value="@Url.Action("Index", new { mode = "Parts" })" selected="@(currentMode == "Parts")">Parts</option>
                    <option value="@Url.Action("Index", new { mode = "Materials" })" selected="@(currentMode == "Materials")">Materials</option>
                </select>
            </div>
            <div>
                <a asp-action="Create" asp-route-mode="@ViewBag.Mode" class="btn btn-primary">
                    <i class="bi bi-plus-circle-fill"></i> Add New Item
                </a>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-hover align-middle">
            <thead class="thead-light">
                <tr>
                    <th>Identification No</th>
                    <th>Project Name</th>
                    @if (ViewBag.Mode != "Finished Goods")
                    {
                        <th>Item Part</th>
                    }
                    @if (ViewBag.Mode == "Finished Goods")
                    {
                        <th>Model Name</th> <th>SP_Number</th>
                    }
                    else
                    {
                        <th>Code Part</th>
                    }
                    <th>Quantity</th>
                    <th>Location</th>
                    <th>Request</th>
                    <th>Borrower</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="inventory-table-body">
                @foreach (var item in Model)
                {
                        <tr id="row-@item.IdentificationNo">
                            <td>@item.IdentificationNo</td>
                            <td>@item.ProjectName</td>
                        @if (ViewBag.Mode != "Finished Goods")
                        {
                            <td>@item.ItemPart</td>
                        }
                        @if (ViewBag.Mode == "Finished Goods")
                        {
                            <td>@item.ModelName</td> <td>@item.SP_Number</td>
                        }
                        else
                        {
                            <td>@item.CodePart</td>
                        }
                            <td>@item.Quantity</td>
                            <td>@item.StorageLocation</td>
                            <td>@item.RequestType</td>
                            <td>@(item.Borrower ?? "-")</td>
                            <td><span class="badge bg-@(item.Status == "Approved" ? "success" : "danger")">@item.Status</span></td>
                            <td>
                            @if (item.Status == "Rejected")
                            {
                                        <button class="btn btn-danger btn-sm" onclick="deleteItem('@item.IdentificationNo')">Delete</button>
                            }
                            else
                            {
                                        <button class="btn btn-success btn-sm" onclick="printQRCode('@item.IdentificationNo', '@item.ProjectName', '@(ViewBag.Mode == "Finished Goods" ? item.ModelName : item.ItemPart)', '@(ViewBag.Mode == "Finished Goods" ? item.SP_Number : item.CodePart)', '@item.Quantity', '@item.StorageLocation', '@item.PIC')">Print QR</button>
                                        <button class="btn btn-info btn-sm mt-1" onclick="downloadDeliveryProof('@item.IdentificationNo')" @(item.RequestType == "IN" ? "disabled" : "")>Download PDF</button>
                            }
                            </td>
                        </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="pagination-controls">
        <span class="page-info" id="page-info"></span>
        <div>
            <button class="btn btn-outline-secondary" id="prev-page" disabled>Previous</button>
            <button class="btn btn-outline-secondary" id="next-page">Next</button>
        </div>
    </div>
</div>

@section Scripts {
        <script>
            // ... (Skrip JavaScript Anda yang lain tetap sama) ...
            function printQRCode(id, projectName, p1, p2, quantity, location, pic) { const currentMode = '@currentMode'; let itemPartOrModel, codeOrSp; if (currentMode === 'Finished Goods') { itemPartOrModel = p1; codeOrSp = p2; } else { itemPartOrModel = p1; codeOrSp = p2; } const qrUrl = `/QrCode/Generate?id=${encodeURIComponent(id)}` + `&projectName=${encodeURIComponent(projectName)}` + `&itemPartOrModel=${encodeURIComponent(itemPartOrModel)}` + `&codeOrSp=${encodeURIComponent(codeOrSp)}` + `&quantity=${encodeURIComponent(quantity)}` + `&location=${encodeURIComponent(location)}` + `&pic=${encodeURIComponent(pic)}`; const printSection = document.createElement("div"); printSection.style.textAlign = "center"; printSection.innerHTML = `<img src="${qrUrl}" alt="QR Code">`; const originalBody = document.body.innerHTML; document.body.innerHTML = printSection.outerHTML; const qrImage = printSection.querySelector('img'); qrImage.onload = function() { window.print(); window.onafterprint = function () { document.body.innerHTML = originalBody; location.reload(); }; }; qrImage.onerror = function() { alert("Failed to load QR Code image."); document.body.innerHTML = originalBody; }; }
            function downloadDeliveryProof(id) { if (!id) { alert("Identification No is missing."); return; } fetch(`/Documents/DeliveryProof?id=${encodeURIComponent(id)}`).then(response => { if (response.ok) { return response.blob(); } else { return response.text().then(text => { throw new Error(text || 'File not found or error generating file.'); }); } }).then(blob => { const url = window.URL.createObjectURL(blob); const a = document.createElement('a'); a.style.display = 'none'; a.href = url; a.download = `DeliveryProof_${id}.pdf`; document.body.appendChild(a); a.click(); window.URL.revokeObjectURL(url); document.body.removeChild(a); }).catch(error => { alert('Error downloading the file: ' + error.message); }); }
            function deleteItem(id) { if (confirm("Are you sure you want to permanently delete this item?")) { const token = document.querySelector('input[name="__RequestVerificationToken"]').value; const mode = '@currentMode'; fetch(`/Home/Delete?id=${encodeURIComponent(id)}&mode=${encodeURIComponent(mode)}`, { method: 'POST', headers: { 'RequestVerificationToken': token } }).then(response => { if (response.ok) { alert("Item successfully deleted."); document.getElementById('row-' + id).remove(); } else { response.text().then(text => alert(`Error: ${text || 'Failed to delete item.'}`)); } }).catch(error => { console.error('Error:', error); alert('An error occurred while deleting the item.'); }); } }

            document.addEventListener('DOMContentLoaded', function () {
                const rowsPerPage = 15;
                const tableBody = document.getElementById('inventory-table-body');
                const allRows = Array.from(tableBody.querySelectorAll('tr'));
                const totalRows = allRows.length;
                const totalPages = Math.ceil(totalRows / rowsPerPage);
                let currentPage = 1;

                const prevButton = document.getElementById('prev-page');
                const nextButton = document.getElementById('next-page');
                const pageInfo = document.getElementById('page-info');

                function showPage(page) {
                    const startIndex = (page - 1) * rowsPerPage;
                    const endIndex = startIndex + rowsPerPage;
                    allRows.forEach(row => row.style.display = 'none');
                    allRows.slice(startIndex, endIndex).forEach(row => row.style.display = '');
                    updatePaginationControls();
                }

                function updatePaginationControls() {
                    prevButton.disabled = currentPage === 1;
                    nextButton.disabled = currentPage === totalPages || totalRows === 0;
                    const startItem = totalRows > 0 ? (currentPage - 1) * rowsPerPage + 1 : 0;
                    const endItem = Math.min(currentPage * rowsPerPage, totalRows);
                    if (totalRows > 0) {
                       pageInfo.textContent = `Showing ${startItem} to ${endItem} of ${totalRows} entries`;
                    } else {
                       pageInfo.textContent = 'No entries found';
                    }
                }

                prevButton.addEventListener('click', () => {
                    if (currentPage > 1) {
                        currentPage--;
                        showPage(currentPage);
                    }
                });

                nextButton.addEventListener('click', () => {
                    if (currentPage < totalPages) {
                        currentPage++;
                        showPage(currentPage);
                    }
                });

                showPage(currentPage);
            });

            document.getElementById('filterDate').addEventListener('change', function () { /* Logika filter tidak berubah */ });
        </script>
}